{
    "entries": [
        {
            "id": "dynamic-welcome",
            "title": "Fully customizable and dynamic Welcome panel",
            "timeFrame": "",
            "text": "After a design refresh, the Edge DevTools welcome page now places a spotlight on helpful documentation in addition to the \"What's New\" announcements. However, my contribution here was more than surface-level, bringing new points of automation and efficiency to the internal team processes. I designed a JSON structure to be fetched from our cloud storage and used to render the welcome page content, allowing every link and title to be customized in real time. This also eliminated the need for code to be checked in to the front-end repo when updating release notes, which saves time for both PMs and engineers. Lastly, I wrote a script to auto-generate a localization metadata object for the release notes-- a time consuming and error prone processes when handled by a human.",
            "imageName": "dynamic-welcome.png",
            "imageAltText": "A portion of the Edge DevTools Welcome page",
            "imageRight": "",
            "link": "https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/welcome/welcome-tool"
        },
        {
            "id": "issues-filtering",
            "title": "Filtering toolbar for the Issues panel",
            "timeFrame": "",
            "text": "Clutter is a pain point that is frequently reported by users of the Issues panel, a tool that analyzes a webpage and surfaces hints related to accessibility, security, compatibility, and more. Since there were too many hints showing, we added controls to filter issues by severity and the browser that it applies to. I implemented  the UI and underlying mechanisms for this feature, which involved programmatically updating the configuration object used to generate hints.",
            "imageName": "issues-filter.png",
            "imageAltText": "A dropdown showing browser filters available in the DevTools issues pane",
            "imageRight": "true",
            "link": "https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/issues/#filter-issues"
        },
        {
            "id": "focus-mode",
            "title": "Focus Mode: A radically user-friendly UI",
            "timeFrame": "",
            "text": "Focus Mode reduces overwhelm and streamlines the DevTools by replacing the main row of tabs with a compact toolbar. This activity bar features distinctive icons and a customizable orientation. The redesign was a large team effort, but my main contribution was the mechanism for adding and removing tools from the activity bar. The most challenging part of this was accounting for the tab overflow behavior when the window is resized and ensuring that all of the tools show up in the right places.",
            "imageName": "focus-mode.png",
            "imageAltText": "Focus mode activity bar in vertical orientation",
            "imageRight": "",
            "link": "https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/experimental-features/focus-mode"
        },
        {
            "id": "msedge-vsce",
            "title": "Edge DevTools for VSCode",
            "timeFrame": "",
            "text": "This VSCode extension allows developers to render, test, and inspect their web pages, all without leaving their editor. When I was assigned to work on the extension it was not much more than an MVP from an internal hackathon, but I was happy to give it some polish. I built out a \"getting started\" workflow with simple instructions on usage and configuration, as well as a workflow to connect a VSCode project to the in-browser DevTools for seamless transitions back to the source files. I was also involved in a major refactoring effort to improve maintainability of the extension. Aside from my portion of the refactoring, I recorded and accounted for all areas that needed to be changed, ensuring that nothing was missed and no work was duplicated while several engineers worked in parallel.",
            "imageName": "devtools-vsce.png",
            "imageAltText": "getting started workflow in the edge devtools for vscode extension",
            "imageRight": "true",
            "link": "https://blogs.windows.com/msedgedev/2021/10/21/improved-authoring-debugging-devtools-visual-studio-code/"
        },
        {
            "id": "source-order-viewer",
            "title": "Source order viewer for screen reader accessibility",
            "timeFrame": "May-August 2020",
            "text": "For my second internship with Microsoft Edge DevTools, I was assigned to implement a top ask from the Web We Want 2019 session: a way to see whether your CSS has placed elements in an unexpected order with respect to the DOM tree. That is, an unexpected order when read aloud by a screen reader. In this tool, the order is indicated via overlays on top of the browser content. This required me to contribute to the Chromium DevTools Protocol, which is the core back end for the DevTools. Aside from the technical exercise, I gained a much greater understanding around the importance of accessibility standards through this project.",
            "imageName": "source-order-viewer.png",
            "imageAltText": "source order viewer being used on an element on reddit.com",
            "imageRight": "",
            "link": "https://blogs.windows.com/msedgedev/2020/09/15/source-order-viewer-edge-devtools/"
        },
        {
            "id": "conditinal-breakpoints",
            "title": "Breakpoint customization in Microsoft Edge DevTools",
            "timeFrame": "May-August 2019",
            "text": "Did you know that there are several types of breakpoints that can streamline your debugging experience? I contributed 4 types of breakpoints to the open source Chromium project during my first Microsoft internship. Conditional breakpoints, log points, XHR breakpoints, and DOM change breakpoints all serve to minimize unnecessary breaks while debugging. Through this project, I learned more about the software development lifecycle. I wrote my first technical spec, went through many formalized code reviews, and adhered to all compliance processes. On the technical side, working within such a large codebase was an eye opening lesson on digesting and understanding others' code in existing systems.",
            "imageName": "breakpoints.png",
            "imageAltText": "conditional breakpoint in the edge devtools",
            "imageRight": "true",
            "link": "https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/javascript/breakpoints"
        },
        {
            "id": "fidelity",
            "title": "Server health check dashboard at Fidelity Investments",
            "timeFrame": "May-August 2018",
            "text": "One other intern and I were tasked with redesigning and implementing the UI for a server health check application using the Angular 2 framework. The application included a high-level dashboard, as well as the ability to drill down and see the status of specific locations, clusters, and machines. This was my first internship where I collaborated on a project with another intern, but I enjoyed using my prior experience to teach him about Angular. It was also my first time working in a more formalized Agile workflow with work item tracking and daily scrum.",
            "imageName": "server-health.jpeg",
            "imageAltText": "a doctor checking the health of a data server",
            "imageRight": "",
            "link": ""
        },
        {
            "id": "upstate-interactive",
            "title": "Web app development at Upstate Interactive Consulting",
            "timeFrame": "July-October 2017",
            "text": "During this internship, I took my initial step into front end development by learning my first framework: Angular 2. Working within the framework, I fixed bugs on the Upstate Interactive website and contributed to an internal content management system by adapting the Material Design system to a functional spec. Through this, I also learned about important concepts in web development like asynchronous operations, unit testing, and state management (via Redux). After my internship, I was asked to stay on the team as a contractor, where I continued to work on the content management system.",
            "imageName": "angular-ui.png",
            "imageAltText": "angular framework logo and upstate interactive logo",
            "imageRight": "true",
            "link": "https://medium.com/upstate-interactive/mocking-providers-and-http-responses-dc10674429cb"
        }
    ]
}